<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
        <!DOCTYPE html>
<html>
	<head>
	    <title>����΢��</title>  
	    <script src="lib/jquery-2.1.1.min.js"></script>
	    <script src="lib/underscore-min.js"></script>
	    <script src="lib/backbone-min.js"></script>
	    <script src="lib/backbone.mutators.js"></script>
	</head>
	<body>
		  
	</body>
 </html>

<script>
  
////  //����һ��ģ��
////  var model=Backbone.Model.extend({
////    
////  });
////  //����һ����ͼ
//// 	var view=Backbone.View.extend({
//// 		el:'body',
//// 		render:function(){
//// 			$(this.el).html(this.model.get('name'));	
//// 		}
//// 	});
//// 	
//// 	//ʵ��һ��ģ��
//// 	var m1=new model();
//// 	m1.attributes.name='aaa'; 
//// 	
////// 	//ʵ����ͼ
////// 	var v1=new  view({
////// 	  model:m1	
////// 	});
////// 	v1.render();
////// 	
//// 	
//// 	
//// 	var Worksapce=Backbone.Router.extend({
//// 		routes:{
//// 			'':'invoiceList',
//// 			'invoice':'invoiceList',
//// 			'invoice/:id':'invoicePage'
//// 		},
//// 		initialize:function(){
//// 			this.invoiceCollection=new Backbone.Collection.extend([
//// 				{name:1234},
//// 				{name:2345},
//// 				{name:3456},
//// 				{name:4567}	
//// 			]);
//// 		},
//// 		invoiceList:function(){
//// 			alert("invoiceList");
////// 			this.changeView(new view({
////// 				model:m1
////// 			}))
//// 		},
//// 		invoicePage:function(id){
//// 			
//// 			this.changeView(new view({
//// 				model:new model({ name:this.invoiceCollection.prototype[id].name })
//// 			}));
//// 		},
//// 		changeView:function(view){ 
//// 			if(this.currentView){
//// 				if(this.currentView==view){
//// 						return;
//// 				}
//// 				 this.currentView.$el.html("");
////         this.currentView.stopListening(); 
//// 			}	
//// 			view.render();
//// 			this.currentView=view;
//// 		}
//// 	});
//// 	
//// 	var aaa=new Worksapce();
//// 	Backbone.history.start();
////  
  		
  		
//  		object1={};
//  		_.extend(object1,Backbone.Events);
//  		
//  		var hello =function(msg){
//  			alert('hello'+msg);	
//  		};
//  		
//  		object1.on("handshake",hello);
//  		
//  		object1.trigger("handshake","world");



//var model=new Backbone.Model({
//	firstName:'John',
//	lastName:'doe',
//	age:20
//});
//
//model.on('change',function(model){
//    alert(model.hasChanged("age"));
//    alert(model.hasChanged("firstName"));
//
//    alert(model.changedAttributes());
//
//    alert(model.previous('age'));
//
//    alert(model.previousAttributes('age'));
//
//
////})
//
//model.set('age',21,{silent:true});
//
//
//    var InvoiceItemModel=Backbone.Model.extend({});
//
//    var InvoiceItemView=Backbone.View.extend({
//        el:'body',
//        render:function(){
//            var html=this.model.get('name')+this.model.get('age');
//            $(this.el).html(html);
//        },
//        initialize:function(){
//            this.listenTo(this.model,'change',this.render);
//        }
//    });
//
//    var invoiceItemModel=new InvoiceItemModel({
//        name:'ffffff',
//        age:8
//    });
//
//    var invoiceItemView=new InvoiceItemView({
//        model:invoiceItemModel
//    });
//
//    invoiceItemView.render();
//
//    invoiceItemModel.set({age:121})
//
//

   var UserModel=Backbone.Model.extend({

   });

   var UserCollection=Backbone.Collection.extend({
       model:UserModel
   });

    //单个模型的视图
   var UserView=Backbone.View.extend({
       tagName:'tr',
       render:function(){
           $(this.el).html(_.map([
              this.model.get('name'),
              this.model.get('age')
           ],function(val,key){
              return '<td>'+val+'</td>'
           }))

           return this;
       } ,
       initialize:function(){
            this.listenTo(this.model,'destroy',this.destroy);
       },
       destroy:function(){
           alert('aa');
            this.remove()
       }

   });

   //定义渲染集合的视图
   var UserListView=Backbone.View.extend({
        tagName:"table",
        render:function(){
            $(this.el).empty();
            $(this.el).append("<tr></tr>").html(_.map(
                    ['name','age'],
                    function(val,key){
                       return "<th>"+val+"</th>"
                    }
            ));
            _.each(this.collection.models,function(model,key){
                 this.append(model);
            },this);

            return this;
        } ,
        append:function(model){
             $(this.el).append(
                     new UserView({model:model}).render().el
             )
        },
        initialize:function(){
           this.listenTo(this.collection,'add',this.append)
        }
   });

   //add  move 控制相关的视图
   var UserListControlsView=Backbone.View.extend({
       render:function(){
            var html='<br><input id="add" type="button" value="add">'+'<input id="remove" type="button" value="Remove">';
            $(this.el).html(html);
            return this;
        },
       events:{
            'click #add':'adduser',
            'click #remove':'romveuser'
       },
       adduser:function(){
            var name=prompt('name','');
            var age=prompt('age','');
            this.collection.add({
                name:name,
                age:age
            })
       },
       romveuser:function(){
           var postion=prompt('id','');
           var  model =this.collection.at(postion);
             model.destroy();
       }
   });

   var Userpageview=Backbone.View.extend({
       render:function(){
         $(this.el).html(new UserListView({
             collection:this.collection
         }).render().el);

         $(this.el).append(new UserListControlsView({
                 collection:this.collection
         }).render().el);
       }
   });

   var a=new Userpageview({
       el:'body',
       collection:new UserCollection([
           {name:'adc ',age:'12'},
           {name:'adc ',age:'13'},
           {name:'111 ',age:'14'}
       ])
   }).render();







</script>
